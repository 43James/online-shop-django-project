from django.shortcuts import render

# Create your views here.
from django.shortcuts import render
from django.views.decorators.csrf import csrf_exempt
import pytz
from accounts.models import MyUser
from orders.models import Order
from .models import UserLine
from linebot import LineBotApi
from linebot.models import TextSendMessage
import json


line_bot_api = LineBotApi('p/7wo/1oBrhYYteqvWuGQQJz5AADd3pnSiyTJByIju6L6rT5fWsifmzRiD8YOoPHYZkSQHNMIcnAyjMq9ad3zjL4LHn4+C5PubjxDeGXrcXO5XIYd65jHw2slPVxQ7akCkzj0ZC+8MRIJ3oIBRpHLAdB04t89/1O/w1cDnyilFU=')

@csrf_exempt
def linebot(request):
    body = request.body.decode('utf-8')
    body = json.loads(body)
    event = body['events'][0]
    text = event['message']['text']

    if text.startswith('‡∏ú‡∏π‡∏Å‡∏ö‡∏±‡∏ç‡∏ä‡∏µ'):
        a = text.split()
        username = a[1]
        user = MyUser.objects.filter(username=username).first()

        if user:
            line = UserLine.objects.filter(user=user).first()
            userId = event['source']['userId']

            if not line:
                line = UserLine(user=user, userId=userId)
                line.save()
            else:
                line.userId = userId
                line.save()
    return render(request, "home_page.html")



#‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏≠‡πâ‡∏≤‡∏ó‡πå‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
def notify_user(order_id):
    try:
        order = Order.objects.get(id=order_id)
        user_line = UserLine.objects.get(user=order.user)

        message = f"{order.user.username} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏ß‡∏±‡∏™‡∏î‡∏∏ ID {order_id} ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥.."
        line_bot_api.push_message(user_line.userId, TextSendMessage(text=message))
    except Order.DoesNotExist:
        print(f"‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á ID {order_id}")
    except UserLine.DoesNotExist:
        print(f"‡πÑ‡∏°‡πà‡∏°‡∏µ UserLine ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô {order.user.username}")



#‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏≠‡πâ‡∏≤‡∏ó‡πå‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
def notify_admin(order_id):
    order = Order.objects.get(id=order_id)
    admin_user_id ='Ubb217fccfe04b1dbf5550e46661a8693'  # Replace with the actual Line user ID of the admin
    message = f"‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô {order.user.username} ID {order_id} ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥.."
    line_bot_api.push_message(admin_user_id, TextSendMessage(text=message))



#‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á
def notify_user_approved(order_id):
    try:
        order = Order.objects.get(id=order_id)
        user_line = UserLine.objects.get(user=order.user)

        # Check if order.date_receive is not None
        if order.date_receive:
            # Set timezone to the desired timezone (e.g., Asia/Bangkok)
            timezone = pytz.timezone('Asia/Bangkok')
            order_date_receive_with_timezone = order.date_receive.astimezone(timezone)

        if order.status and not order.refuse:
            if order.date_receive:
                formatted_date = order_date_receive_with_timezone.strftime("%d/%m/%Y")
                formatted_time = order_date_receive_with_timezone.strftime("%H:%M")
                message = f"‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏ß‡∏±‡∏™‡∏î‡∏∏‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì {order.user.first_name} ID {order_id} ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß‚úÖ ‡∏£‡∏±‡∏ö‡∏ß‡∏±‡∏™‡∏î‡∏∏‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà {formatted_date} ‡πÄ‡∏ß‡∏•‡∏≤ {formatted_time} ‡∏ô."
            else:
                message = f"‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏ß‡∏±‡∏™‡∏î‡∏∏‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì {order.user.first_name} ID {order_id} ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß‚úÖ"
        elif not order.status and not order.refuse:
            message = f"‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏ß‡∏±‡∏™‡∏î‡∏∏‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì {order.user.first_name} ID {order_id} ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£üòì"
        elif order.refuse:
            
            message = f"‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏ß‡∏±‡∏™‡∏î‡∏∏‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì {order.user.first_name} ID {order_id} ‡∏ñ‡∏π‡∏Å‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò!üíî ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏ {order.other}"
        else:
            message = "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"

        line_bot_api.push_message(user_line.userId, TextSendMessage(text=message))
    except Order.DoesNotExist:
        print(f"‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á ID {order_id}")
    except UserLine.DoesNotExist:
        print(f"‡πÑ‡∏°‡πà‡∏°‡∏µ UserLine ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô {order.user.username}")